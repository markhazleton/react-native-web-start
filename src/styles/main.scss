@use 'sass:color';
@use './variables.scss' as vars;
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Modern CSS Custom Properties */
:root {
  --primary-color: #3b82f6;
  --primary-dark: #1d4ed8;
  --secondary-color: #64748b;
  --background-color: #f8fafc;
  --background-gradient: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  --text-color: #1e293b;
  --text-secondary: #64748b;
  --border-color: #f1f5f9;
  --shadow-sm: 0 4px 12px rgba(0,0,0,0.04), 0 2px 6px rgba(0,0,0,0.02);
  --shadow-md: 0 8px 20px rgba(0,0,0,0.06), 0 4px 12px rgba(0,0,0,0.03);
  --shadow-lg: 0 12px 28px rgba(0,0,0,0.08), 0 6px 16px rgba(0,0,0,0.04);
  --border-radius: 16px;
  --border-radius-sm: 12px;
  --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Global enhancements for smooth animations */
* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* App container with modern background */
.app-container {
  min-height: 100vh;
  background: var(--background-gradient);
  color: var(--text-color);
}

/* Responsive utilities */
@media (max-width: 768px) {
  .mobile-hide {
    display: none;
  }
}

/* Enhanced button components */
.button {
  padding: 1rem 1.5rem;
  border-radius: var(--border-radius-sm);
  font-weight: 600;
  font-size: 0.95rem;
  letter-spacing: 0.02em;
  transition: var(--transition);
  cursor: pointer;
  border: none;
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
  }
  
  &:hover::before {
    left: 100%;
  }
  
  &--primary {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
    color: white;
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    
    &:hover {
      transform: translateY(-1px);
      box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);
    }
    
    &:active {
      transform: translateY(0);
    }
  }
  
  &--secondary {
    background-color: white;
    color: var(--text-color);
    border: 2px solid var(--border-color);
    box-shadow: var(--shadow-sm);
    
    &:hover {
      border-color: var(--primary-color);
      color: var(--primary-color);
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }
  }
}

/* Modern card design */
.card {
  background-color: white;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-sm);
  padding: 1.75rem;
  border: 1px solid var(--border-color);
  transition: var(--transition);
  
  &:hover {
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
  }
  
  &--elevated {
    box-shadow: var(--shadow-lg);
    border: 1px solid #f3f4f6;
    
    &:hover {
      transform: translateY(-4px);
      box-shadow: 0 16px 32px rgba(0,0,0,0.1), 0 8px 20px rgba(0,0,0,0.06);
    }
  }
}

/* Modern utility classes */
.text-primary {
  color: var(--primary-color);
}

.bg-primary {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
}

.text-secondary {
  color: var(--secondary-color);
}

.bg-secondary {
  background-color: var(--secondary-color);
}

/* Smooth scroll behavior */
html {
  scroll-behavior: smooth;
}

/* Focus styles for accessibility */
button:focus-visible,
input:focus-visible,
[tabindex]:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* Loading animation */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.loading {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Gradient text effect */
.gradient-text {
  background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Modern shadows */
.shadow-modern {
  box-shadow: var(--shadow-md);
}

.shadow-modern-lg {
  box-shadow: var(--shadow-lg);
}
